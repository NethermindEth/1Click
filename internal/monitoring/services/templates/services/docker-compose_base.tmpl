{{/* docker-compose_base.tmpl */}}
{{ define "docker-compose" }}

services:
  grafana:
    container_name: sedge_grafana
    image: ${GRAFANA_IMAGE}
    restart: unless-stopped
    ports:
      - ${GRAFANA_PORT}:3000
    volumes:
      - grafana-storage:/var/lib/grafana
      - ${GRAFANA_PROV}:/etc/grafana/provisioning
      - ${GRAFANA_DATA}:/etc/grafana/data
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-oncall-app
    networks:
      - sedge

  prometheus:
    container_name: sedge_prometheus
    image: ${PROM_IMAGE}
    restart: unless-stopped
    ports:
      - ${PROM_PORT}:9090
    volumes:
      - ${PROM_CONF}:/etc/prometheus/prometheus.yml
      - ${PROM_RULES}:/etc/prometheus/rules
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    networks:
      - sedge

  alertmanager:
    container_name: sedge_alertmanager
    image: ${ALERTMANAGER_IMAGE}
    restart: unless-stopped
    ports:
      - ${ALERTMANAGER_PORT}:9093
    volumes:
      - ${ALERTMANAGER_CONF}:/etc/prometheus/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/prometheus/alertmanager/alertmanager.yml'
    networks:
      - sedge

  node-exporter:
    container_name: sedge_node_exporter
    image: ${NODE_EXPORTER_IMAGE}
    restart: unless-stopped
    ports:
      - ${NODE_EXPORTER_PORT}:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    networks:
      - sedge

{{ if .LidoExporter }}
  {{ template "lido_exporter" . }}
{{ end }}

volumes:
  grafana-storage:

networks:
  sedge:
    name: sedge-network
{{ end }}