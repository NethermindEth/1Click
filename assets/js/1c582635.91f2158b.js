"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4027],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>c});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},h=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,h=o(e,["components","mdxType","originalType","parentName"]),g=p(n),c=i,m=g["".concat(l,".").concat(c)]||g[c]||d[c]||r;return n?a.createElement(m,s(s({ref:t},h),{},{components:n})):a.createElement(m,s({ref:t},h))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=g;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8945:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const r={sidebar_position:12,id:"slashing-import"},s="Slashing Import",o={unversionedId:"commands/slashing-import",id:"commands/slashing-import",title:"Slashing Import",description:"Running sedge slashing-import will import slashing protection data to the current validator client. The slashing protection data is a JSON file that meets with the EIP-3076 specification.",source:"@site/docs/commands/slashingImport.mdx",sourceDirName:"commands",slug:"/commands/slashing-import",permalink:"/docs/commands/slashing-import",draft:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/commands/slashingImport.mdx",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12,id:"slashing-import"},sidebar:"tutorialSidebar",previous:{title:"Slashing Export",permalink:"/docs/commands/slashing-export"},next:{title:"Version",permalink:"/docs/commands/version"}},l={},p=[{value:"Help",id:"help",level:2},{value:"Execution Example",id:"execution-example",level:2}],h={toc:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"slashing-import"},"Slashing Import"),(0,i.kt)("p",null,"Running ",(0,i.kt)("inlineCode",{parentName:"p"},"sedge slashing-import")," will import slashing protection data to the current validator client. The slashing protection data is a JSON file that meets with the ",(0,i.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-3076"},"EIP-3076")," specification."),(0,i.kt)("h2",{id:"help"},"Help"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'$ sedge slashing-import --help\n\nImport Slashing Protection Interchange Format (EIP-3076) data. This command assumes\nthat the validator client container exists, stopped or not and that its database\nis already initialized. The validator database is initialized if the validator is\nrunning or has already run but is stopped, and also after importing the validator keys.\nThis command stops the validator client during the importing process due to the\nvalidator database being locked while it\'s running but leaves the validator client\nin the same state in which it was found. That means if the validator is running/stopped\nbefore the import, then the validator will be running/stopped after the command\nis executed, regardless of whether the export fails or not. To force a different\nbehavior use --start-validator and --stop-validator flags.\nThe [validator] is a required argument used to specify which validator client, from\nall supported by Sedge (lighthouse, lodestar, prysm or teku), is used to import the\nSlashing Protection data. This is necessary because each client has its own way to\nachieve the importation.\n\nUsage:\n  sedge slashing-import [flags] [validator]\n\nExamples:\n\nsedge slashing-import --from slashing-data.json prysm\nsedge slashing-import --from slashing-data.json --stop-validator lodestar\nsedge slashing-import --from slashing-data.json --start-validator lighthouse\n\nFlags:\n      --container-tag string   Container tag to use. If defined, sedge will add to each container and the network, a suffix with the tag. e.g. sedge-validator-client -> sedge-validator-client-<tag>.\n  -f, --from string            path to the JSON file in the EIP-3076 format with the slashing protection data to import (default: <generation-dir>/slashing_protection.json)\n  -h, --help                   help for slashing-import\n  -n, --network string         network (default "mainnet")\n  -p, --path string            path to the generation directory (default "/path/to/sedge-data")\n      --start-validator        starts the validator client after import, regardless of the state the validator was in before\n      --stop-validator         stops the validator client after import, regardless of the state the validator was in before\n\nGlobal Flags:\n      --log-level string   Set Log Level, e.g panic, fatal, error, warn, warning, info, debug, trace (default "info")\n')),(0,i.kt)("h2",{id:"execution-example"},"Execution Example"),(0,i.kt)("p",null,"This is an example of importing slashing protection data to a setup using sepolia network and prysm as validator client that is already stopped at the moment of the import."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ sedge slashing-import prysm -f slashing-export.json -n sepolia\n2023-01-06 14:59:11 -- [INFO] [Logger Init] Log level: info\n2023-01-06 14:59:11 -- [INFO] You are running the latest version of sedge. Version:  v1.4.0\n# highlight-next-line\n2023-01-06 14:59:11 -- [INFO] Importing slashing data to client prysm from slashing-export.json\n# highlight-next-line\n2023-01-06 14:59:11 -- [INFO] The slashing protection container is starting...\n# highlight-next-line\n2023-01-06 14:59:12 -- [INFO] The slashing container ends successfully.\n")),(0,i.kt)("p",null,"Notice in this case the validator client remains stopped because it has been stopped since before the import. If necessary the validator client could be started after the import using the ",(0,i.kt)("inlineCode",{parentName:"p"},"--start-validator")," flag, for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ sedge slashing-import prysm -f slashing-export.json -n sepolia --start-validator\n2023-01-06 15:08:05 -- [INFO] [Logger Init] Log level: info\n2023-01-06 15:08:06 -- [INFO] You are running the latest version of sedge. Version:  v1.4.0\n2023-01-06 15:08:06 -- [INFO] Importing slashing data to client prysm from slashing-export.json\n2023-01-06 15:08:06 -- [INFO] The slashing protection container is starting...\n2023-01-06 15:08:06 -- [INFO] The slashing container ends successfully.\n# highlight-next-line\n2023-01-06 15:08:06 -- [INFO] The validator container is being restarted\n# highlight-next-line\n2023-01-06 15:08:06 -- [INFO] Validator started.\n")),(0,i.kt)("p",null,"Another case may be importing the slashing data protection when the validator is currently running, for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ sedge slashing-import prysm -f slashing-export.json -n sepolia \n2023-01-06 15:10:27 -- [INFO] [Logger Init] Log level: info\n2023-01-06 15:10:27 -- [INFO] You are running the latest version of sedge. Version:  v1.4.0\n# highlight-next-line\n2023-01-06 15:10:27 -- [INFO] Stopping validator client...\n# highlight-next-line\n2023-01-06 15:10:27 -- [INFO] stopping service: validator-client, currently on running status\n# highlight-next-line\n2023-01-06 15:10:28 -- [INFO] Validator client stopped.\n2023-01-06 15:10:28 -- [INFO] Importing slashing data to client prysm from slashing-export.json\n2023-01-06 15:10:28 -- [INFO] The slashing protection container is starting...\n2023-01-06 15:10:28 -- [INFO] The slashing container ends successfully.\n# highlight-next-line\n2023-01-06 15:10:28 -- [INFO] The validator container is being restarted\n# highlight-next-line\n2023-01-06 15:10:28 -- [INFO] Validator started.\n")),(0,i.kt)("p",null,"In this case, the validator client is stopped before the import and started again afterward. If necessary validator could be stopped after the import using the ",(0,i.kt)("inlineCode",{parentName:"p"},"--stop-validator")," flag. for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ sedge slashing-import prysm -f slashing-export.json -n sepolia --stop-validator\n2023-01-06 15:12:22 -- [INFO] [Logger Init] Log level: info\n2023-01-06 15:12:22 -- [INFO] You are running the latest version of sedge. Version:  v1.4.0\n# highlight-next-line\n2023-01-06 15:12:22 -- [INFO] Stopping validator client...\n# highlight-next-line\n2023-01-06 15:12:22 -- [INFO] stopping service: validator-client, currently on running status\n# highlight-next-line\n2023-01-06 15:12:22 -- [INFO] Validator client stopped.\n2023-01-06 15:12:22 -- [INFO] Importing slashing data to client prysm from slashing-export.json\n2023-01-06 15:12:22 -- [INFO] The slashing protection container is starting...\n2023-01-06 15:12:23 -- [INFO] The slashing container ends successfully.\n")),(0,i.kt)("p",null,"In this case, the validator client is stopped before the import but is not started again afterward."))}d.isMDXComponent=!0}}]);