"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4875],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=n.createContext({}),l=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(r),m=o,f=p["".concat(d,".").concat(m)]||p[m]||c[m]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},6793:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:15,id:"lido-status"},i="Lido Status",s={unversionedId:"commands/lido-status",id:"commands/lido-status",title:"Lido Status",description:"Running sedge lido-status will display detailed data for a single Lido Node Operator based on the provided rewards address.",source:"@site/docs/commands/lidoStatus.mdx",sourceDirName:"commands",slug:"/commands/lido-status",permalink:"/docs/commands/lido-status",draft:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/commands/lidoStatus.mdx",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15,id:"lido-status"},sidebar:"tutorialSidebar",previous:{title:"Show",permalink:"/docs/commands/show"},next:{title:"Hardware requirements",permalink:"/docs/hardware-requirements/"}},d={},l=[{value:"Help",id:"help",level:2}],u={toc:l};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"lido-status"},"Lido Status"),(0,o.kt)("p",null,"Running ",(0,o.kt)("inlineCode",{parentName:"p"},"sedge lido-status")," will display detailed data for a single Lido Node Operator based on the provided rewards address.\nIncluding information on the node operator's status, queue details, bond and reward information, and any relevant alerts."),(0,o.kt)("h2",{id:"help"},"Help"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'$ sedge lido-status -h\nThis command retrieves and displays the status and detailed information of Lido Node Operators. \n\nThis information includes:\n- Node Operator ID.\n- Keys and queue information: available for deposit (in the queue), stuck, refunded, exited, deposited.\n- Bond and rewards information: total amount, amounts lower and higher than required, non-claimed rewards.\n\nValid args: reward address of Node Operator (rewards recipient)\n\nUsage:\n  sedge lido-status [flags] [args]\n\nFlags:\n  -n, --network string   Target network. e.g. holesky, mainnet etc. (default "holesky")\n      --l                Show detailed descriptions for each value\n  -i, --nodeID int       Your Node Operator ID (optional) (default -1)\n  -h, --help             help for lido-status\n\nGlobal Flags:\n      --log-level string   Set Log Level, e.g panic, fatal, error, warn, warning, info, debug, trace (default "info")\n')))}c.isMDXComponent=!0}}]);