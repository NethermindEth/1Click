"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7504],{2370:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var s=n(4848),o=n(8453);const r={id:"migrate-setup",sidebar_position:11},i="Migrate from another setup",a={id:"quickstart/samples/migrate-setup",title:"Migrate from another setup",description:"If you already have a setup running and want to migrate it to a new server, change the client you are using, or upgrade",source:"@site/docs/quickstart/samples/migrate-current-setup.mdx",sourceDirName:"quickstart/samples",slug:"/quickstart/samples/migrate-setup",permalink:"/docs/quickstart/samples/migrate-setup",draft:!1,unlisted:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/quickstart/samples/migrate-current-setup.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{id:"migrate-setup",sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Running a MEV-boost node",permalink:"/docs/quickstart/samples/running-mev-boost-node"},next:{title:"Staking with Lido using Sedge",permalink:"/docs/quickstart/staking-with-lido"}},l={},d=[{value:"Migrating from a not Sedge setup",id:"migrating-from-a-not-sedge-setup",level:2},{value:"Migrating from a Sedge setup to another Sedge setup",id:"migrating-from-a-sedge-setup-to-another-sedge-setup",level:2}];function h(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"migrate-from-another-setup",children:"Migrate from another setup"})}),"\n",(0,s.jsx)(t.p,{children:"If you already have a setup running and want to migrate it to a new server, change the client you are using, or upgrade\nyour node, you are in the right place."}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:"We recommend you to investigate and know which clients you are going to use before migrating your setup. This will help\nyou to avoid some issues that may arise during the migration process."})}),"\n",(0,s.jsx)(t.h2,{id:"migrating-from-a-not-sedge-setup",children:"Migrating from a not Sedge setup"}),"\n",(0,s.jsx)(t.p,{children:"If you are migrating from a setup that is not Sedge, you will need to do the following:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Generate a new setup using Sedge, you can choose between the interactive or the non-interactive setup.\nIn this case we will use the non-interactive setup."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sedge generate full-node\n"})}),"\n",(0,s.jsxs)(t.ol,{start:"2",children:["\n",(0,s.jsx)(t.li,{children:"Generate the keys, if you don't have ones already."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sedge keys\n"})}),"\n",(0,s.jsxs)(t.p,{children:["If you already have keys, you can copy them to the new setup. The keys are usually located in the\n",(0,s.jsx)(t.code,{children:"./sedge-data/keystore"})," folder. It might require that the keys are in the expected format."]}),"\n",(0,s.jsxs)(t.p,{children:["Otherwise, you can use your mnemonic to generate the keys, using the same ",(0,s.jsx)(t.code,{children:"sedge keys"})," command."]}),"\n",(0,s.jsxs)(t.ol,{start:"3",children:["\n",(0,s.jsx)(t.li,{children:"Import keys, either by copying them to the new setup or using the one generated in the previous step. The format of\nthe keys should follow the EIP-2335 standard."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sedge import-key\n"})}),"\n",(0,s.jsxs)(t.ol,{start:"4",children:["\n",(0,s.jsx)(t.li,{children:"If you are using any politics for slashing protection on your node, you can export that info following the slashing export\ninstructions of the node you are using. It will need to follow the EIP-3076 format."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Once you have the JSON file, you can import it to the new setup."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sedge slashing-import --from slashing-data.json [validator]\n"})}),"\n",(0,s.jsx)(t.p,{children:"You will need to provide the validator client you are going to use in your setup, in order to import the slashing data."}),"\n",(0,s.jsxs)(t.ol,{start:"5",children:["\n",(0,s.jsx)(t.li,{children:"If you follow the previous steps, you should have a new setup with the same keys and slashing protection data."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"You are ready to run it:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sedge run\n"})}),"\n",(0,s.jsx)(t.h2,{id:"migrating-from-a-sedge-setup-to-another-sedge-setup",children:"Migrating from a Sedge setup to another Sedge setup"}),"\n",(0,s.jsx)(t.p,{children:"If you are migrating the setup from a previously generated Sedge setup, it will be easier."}),"\n",(0,s.jsx)(t.p,{children:"You will be able to directly export the keys and slashing protection data, and import them to the new setup, using sedge\nwithout the need to follow any other step."}),"\n",(0,s.jsx)(t.p,{children:"You can follow the next steps to make the migration:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Generate the new setup, you can choose between the interactive or the non-interactive setup."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sedge generate full-node --path new-path\n"})}),"\n",(0,s.jsxs)(t.ol,{start:"2",children:["\n",(0,s.jsxs)(t.li,{children:["You can either import the keystore folder from your previous setup, or generate the keys again using the mnemonic.\nIn this case we will use the ",(0,s.jsx)(t.code,{children:"sedge import-key"})," command."]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"sedge import-key --from [old-keystore-dir]\n"})}),"\n",(0,s.jsxs)(t.ol,{start:"3",children:["\n",(0,s.jsx)(t.li,{children:"Export the slashing protection data from the previous setup."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sedge slashing-export --out slashing-data.json [validator]\n"})}),"\n",(0,s.jsx)(t.p,{children:"You will need to provide the validator client you are using in your previous setup, in order to export the slashing data."}),"\n",(0,s.jsxs)(t.ol,{start:"4",children:["\n",(0,s.jsx)(t.li,{children:"Import the slashing protection data to the new setup."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sedge slashing-import --from slashing-data.json [validator]\n"})}),"\n",(0,s.jsx)(t.p,{children:"You will need to provide the validator client you are going to use in your setup, in order to import the slashing data."}),"\n",(0,s.jsxs)(t.ol,{start:"5",children:["\n",(0,s.jsx)(t.li,{children:"If you follow the previous steps, you should have a new setup with the same keys and slashing protection data."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"You are ready to run it:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sedge run\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var s=n(6540);const o={},r=s.createContext(o);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);