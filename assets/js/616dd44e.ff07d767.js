"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4407],{786:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var t=s(4848),o=s(8453);const r={sidebar_position:4,id:"holesky"},i="Holesky",l={id:"networks/holesky",title:"Holesky",description:"Holesky is Ethereum's public testnet that serves as a technical experimentation platform for Ethereum's infrastructure, staking designs, and protocol-level developments. This testing environment brings its own set of validators, a dedicated block explorer, and an ecosystem of faucets.",source:"@site/docs/networks/holesky.mdx",sourceDirName:"networks",slug:"/networks/holesky",permalink:"/docs/networks/holesky",draft:!1,unlisted:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/networks/holesky.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,id:"holesky"},sidebar:"tutorialSidebar",previous:{title:"Sepolia",permalink:"/docs/networks/sepolia"},next:{title:"Gnosis",permalink:"/docs/networks/gnosis"}},d={},a=[{value:"Supported Execution Clients",id:"supported-execution-clients",level:2},{value:"Supported Consensus Clients",id:"supported-consensus-clients",level:2},{value:"Supported Validator Clients",id:"supported-validator-clients",level:2},{value:"MEV-Boost",id:"mev-boost",level:2},{value:"Generating a Full Node",id:"generating-a-full-node",level:2},{value:"Generating a Full Node with a Validator",id:"generating-a-full-node-with-a-validator",level:2},{value:"Create keystore for validator",id:"create-keystore-for-validator",level:2},{value:"Running your setup",id:"running-your-setup",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"holesky",children:"Holesky"})}),"\n",(0,t.jsx)(n.p,{children:"Holesky is Ethereum's public testnet that serves as a technical experimentation platform for Ethereum's infrastructure, staking designs, and protocol-level developments. This testing environment brings its own set of validators, a dedicated block explorer, and an ecosystem of faucets."}),"\n",(0,t.jsx)(n.h2,{id:"supported-execution-clients",children:"Supported Execution Clients"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.nethermind.io/",children:"Nethermind"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://geth.ethereum.org/docs/",children:"Geth"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/ledgerwatch/erigon",children:"Erigon"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://besu.hyperledger.org/en/stable/",children:"Besu"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"supported-consensus-clients",children:"Supported Consensus Clients"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://lighthouse-book.sigmaprime.io/",children:"Lighthouse"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://chainsafe.github.io/lodestar/",children:"Lodestar"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.prylabs.network/docs/getting-started/",children:"Prysm"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.teku.consensys.net/en/latest/",children:"Teku"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://nimbus.guide/",children:"Nimbus"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"supported-validator-clients",children:"Supported Validator Clients"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://lighthouse-book.sigmaprime.io/",children:"Lighthouse"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://chainsafe.github.io/lodestar/",children:"Lodestar"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.prylabs.network/docs/getting-started/",children:"Prysm"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.teku.consensys.net/en/latest/",children:"Teku"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://nimbus.guide/",children:"Nimbus"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"mev-boost",children:"MEV-Boost"}),"\n",(0,t.jsxs)(n.p,{children:["We support ",(0,t.jsx)(n.a,{href:"https://github.com/flashbots/mev-boost",children:"mev-boost"})," on holesky by default, in case you want to remove it,\nrun ",(0,t.jsx)(n.code,{children:"sedge generate full-node"})," using the ",(0,t.jsx)(n.code,{children:"--no-mev-boost"})," flag, for example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sedge generate full-node --network=holesky --no-mev-boost=true\n"})}),"\n",(0,t.jsx)(n.h2,{id:"generating-a-full-node",children:"Generating a Full Node"}),"\n",(0,t.jsxs)(n.p,{children:["To generate a setup of a full node (without a validator node) with random clients, you only need to add the ",(0,t.jsx)(n.code,{children:"--no-validator"})," to ",(0,t.jsx)(n.code,{children:"sedge generate full-node"}),". For example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sedge generate full-node --no-validator --network=holesky\n"})}),"\n",(0,t.jsx)(n.h2,{id:"generating-a-full-node-with-a-validator",children:"Generating a Full Node with a Validator"}),"\n",(0,t.jsxs)(n.p,{children:["To generate a setup of a validator with random clients, you need to omit the ",(0,t.jsx)(n.code,{children:"--no-validator"})," flag. For example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sedge generate full-node --network=holesky\n"})}),"\n",(0,t.jsx)(n.h2,{id:"create-keystore-for-validator",children:"Create keystore for validator"}),"\n",(0,t.jsx)(n.p,{children:"To create a keystore for a validator, you need to run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sedge keys --network holesky\n"})}),"\n",(0,t.jsx)(n.h2,{id:"running-your-setup",children:"Running your setup"}),"\n",(0,t.jsx)(n.p,{children:"Once you have generated your setup, you can run it with the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sedge run\n"})})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var t=s(6540);const o={},r=t.createContext(o);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);