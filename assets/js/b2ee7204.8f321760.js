"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9358],{4500:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var i=o(4848),t=o(8453);const r={sidebar_position:16,id:"monitoring"},a="Monitoring",s={id:"commands/monitoring",title:"Monitoring",description:"Running sedge monitoring will allow you to manage the monitoring stack used for tracking the performance and health of node operations.",source:"@site/docs/commands/monitoring.mdx",sourceDirName:"commands",slug:"/commands/monitoring",permalink:"/docs/commands/monitoring",draft:!1,unlisted:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/commands/monitoring.mdx",tags:[],version:"current",sidebarPosition:16,frontMatter:{sidebar_position:16,id:"monitoring"},sidebar:"tutorialSidebar",previous:{title:"Lido Status",permalink:"/docs/commands/lido-status"},next:{title:"Hardware requirements",permalink:"/docs/hardware-requirements/"}},l={},d=[{value:"Help",id:"help",level:2},{value:"Init Command",id:"init-command",level:2},{value:"Default Monitoring",id:"default-monitoring",level:3},{value:"Lido-Specific Monitoring",id:"lido-specific-monitoring",level:3},{value:"Clean Command",id:"clean-command",level:2}];function c(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"monitoring",children:"Monitoring"})}),"\n",(0,i.jsxs)(e.p,{children:["Running ",(0,i.jsx)(e.code,{children:"sedge monitoring"})," will allow you to manage the monitoring stack used for tracking the performance and health of node operations."]}),"\n",(0,i.jsx)(e.h2,{id:"help",children:"Help"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"$ sedge monitoring -h\nManage the monitoring stack. Use 'init' to install and run, or 'clean' to stop and uninstall.\n\nUsage:\n  sedge monitoring [command] [flags]\n\nAvailable Commands:\n  init        Initialize the monitoring stack (Grafana, Prometheus, etc.)\n  clean       Clean and uninstall the monitoring stack\n\nFlags:\n  -h, --help   help for monitoring\n\nGlobal Flags:\n  --log-level string   Set log level, e.g., panic, fatal, error, warn, warning, info, debug, trace (default \"info\")\n\n"})}),"\n",(0,i.jsx)(e.h2,{id:"init-command",children:"Init Command"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"sedge monitoring init"})," initializes the monitoring stack, configuring services like ",(0,i.jsx)(e.strong,{children:"Prometheus"})," and ",(0,i.jsx)(e.strong,{children:"Grafana"}),". It supports both default and Lido-specific configurations."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'$ sedge monitoring init -h\nThis command initializes the monitoring stack (Grafana, Prometheus, etc.) for Lido CSM or general node monitoring.\n\nUsage:\n  sedge monitoring init [subcommand] [flags]\n\nAvailable Subcommands:\n  default     Default monitoring configuration (Prometheus, Grafana, Node Exporter)\n  lido        Configure Lido CSM node monitoring (Prometheus, Grafana, Node Exporter, Lido Exporter)\n\nFlags:\n  -h, --help   help for init\n\nGlobal Flags:\n  --log-level string   Set log level, e.g., panic, fatal, error, warn, warning, info, debug, trace (default "info")\n'})}),"\n",(0,i.jsx)(e.h3,{id:"default-monitoring",children:"Default Monitoring"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"$ sedge monitoring init default -h\nDefault monitoring configuration using Prometheus, Grafana, and Node Exporter.\n\nUsage:\n  sedge monitoring init default [flags]\n\nFlags:\n  -h, --help   help for default\n"})}),"\n",(0,i.jsx)(e.h3,{id:"lido-specific-monitoring",children:"Lido-Specific Monitoring"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'$ sedge monitoring init lido -h\nConfigure Lido CSM node monitoring (Prometheus, Grafana, Node Exporter, Lido Exporter).\n\nUsage:\n  sedge monitoring init lido [flags]\n\nFlags:\n  --node-operator-id string   Lido Node Operator ID\n  --reward-address string     Reward address of Node Operator (used to calculate Node Operator ID if not set)\n  --network string            Target network (default "holesky")\n  --rpc-endpoints strings     List of Ethereum HTTP RPC endpoints\n  --ws-endpoints strings      List of Ethereum WebSocket RPC endpoints\n  --port uint16               Port for exporting metrics (default 8080)\n  --scrape-time duration      Scrape interval for metrics (default "30s")\n  --log-level string          Set log level (default "info")\n\nGlobal Flags:\n  --log-level string   Set log level, e.g., panic, fatal, error, warn, warning, info, debug, trace (default "info")\n'})}),"\n",(0,i.jsx)(e.h2,{id:"clean-command",children:"Clean Command"}),"\n",(0,i.jsxs)(e.p,{children:["The ",(0,i.jsx)(e.code,{children:"sedge monitoring clean"})," command stops and uninstalls the monitoring stack."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'$ sedge monitoring clean -h\nClean and uninstall the monitoring stack.\n\nUsage:\n  sedge monitoring clean [flags]\n\nFlags:\n  -h, --help   help for clean\n\nGlobal Flags:\n  --log-level string   Set log level, e.g., panic, fatal, error, warn, warning, info, debug, trace (default "info")\n\n'})})]})}function g(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(c,{...n})}):c(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>a,x:()=>s});var i=o(6540);const t={},r=i.createContext(t);function a(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);