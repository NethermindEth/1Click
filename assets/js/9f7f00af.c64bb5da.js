"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3113],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||a;return n?o.createElement(h,i(i({ref:t},p),{},{components:n})):o.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9142:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:2,id:"run-mev-boost-sepolia"},i="Run a validator with mev-boost on Sepolia",s={unversionedId:"quickstart/samples/run-mev-boost-sepolia",id:"quickstart/samples/run-mev-boost-sepolia",title:"Run a validator with mev-boost on Sepolia",description:"This guide shows you how to setup and run a validator using Teku as consensus layer, with a random execution client, and mev-boost.",source:"@site/docs/quickstart/samples/run-validator-mev-sepolia.md",sourceDirName:"quickstart/samples",slug:"/quickstart/samples/run-mev-boost-sepolia",permalink:"/docs/quickstart/samples/run-mev-boost-sepolia",draft:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/quickstart/samples/run-validator-mev-sepolia.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"run-mev-boost-sepolia"},sidebar:"tutorialSidebar",previous:{title:"Run a validator on Mainnet",permalink:"/docs/quickstart/samples/run-validator"},next:{title:"Using custom Bootnodes",permalink:"/docs/quickstart/samples/custom-bootnodes"}},l={},u=[],p={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"run-a-validator-with-mev-boost-on-sepolia"},"Run a validator with mev-boost on Sepolia"),(0,r.kt)("p",null,"This guide shows you how to setup and run a validator using ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Consensys/teku/"},"Teku")," as consensus layer, with a random execution client, and mev-boost."),(0,r.kt)("p",null,"First make sure you have Sedge installed and in your PATH following the ",(0,r.kt)("a",{parentName:"p",href:"/docs/quickstart/install-guide"},"installation guide"),"."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you don't have Sedge in your PATH, just open your terminal on the folder which Sedge's executable / binary is and run ",(0,r.kt)("inlineCode",{parentName:"p"},"./sedge")," instead of only ",(0,r.kt)("inlineCode",{parentName:"p"},"sedge"),".")),(0,r.kt)("p",null,"Run the following command from your terminal to set up a Teku consensus and validator nodes on Sepolia with a random execution client:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sedge generate full-node --network sepolia -c teku \n")),(0,r.kt)("p",null,"Set up your keys running the following command from your terminal:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sedge keys --network sepolia\n")),(0,r.kt)("p",null,"Import the keys that you just generate in the command above using the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sedge import-key\n")),(0,r.kt)("p",null,"After that, you just need to run your setup with the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sedge run\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"--network")," flag allow you to choose the target network for the setup. To check out supported networks run ",(0,r.kt)("inlineCode",{parentName:"p"},"sedge networks"),". Default network is mainnet."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"-c/-v")," flag is to select the desired consensus/validator client for the setup. If you only use one of those flags, then the same client pair will be used for consensus and validator nodes."),(0,r.kt)("p",null,"There is also a ",(0,r.kt)("inlineCode",{parentName:"p"},"-e")," flag to select the execution client. The default behavior is to choose a randomized client, that's why if we skip the ",(0,r.kt)("inlineCode",{parentName:"p"},"-e")," flag this time, a randomized execution client will be used."),(0,r.kt)("p",null,"mev-boost is a default setting as long as Sedge supports mev-boost for the selected client and network. If you don't want to use mev-boost in this case, then add the ",(0,r.kt)("inlineCode",{parentName:"p"},"--no-mev-boost")," flag to the command. Check out the project's ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/NethermindEth/sedge"},"README")," for more information on Sedge's mev-boost support."))}c.isMDXComponent=!0}}]);