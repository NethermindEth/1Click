"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9596],{5044:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>d,metadata:()=>i,toc:()=>a});var t=n(4848),s=n(8453);const d={id:"custom-bootnodes",sidebar_position:3},r="Using custom Bootnodes",i={id:"quickstart/samples/custom-bootnodes",title:"Using custom Bootnodes",description:"What are Bootnodes?",source:"@site/docs/quickstart/samples/custom-bootnodes.mdx",sourceDirName:"quickstart/samples",slug:"/quickstart/samples/custom-bootnodes",permalink:"/docs/quickstart/samples/custom-bootnodes",draft:!1,unlisted:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/quickstart/samples/custom-bootnodes.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"custom-bootnodes",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Run a validator with mev-boost on Sepolia",permalink:"/docs/quickstart/samples/run-mev-boost-sepolia"},next:{title:"Using custom MEV Relays",permalink:"/docs/quickstart/samples/using-relays"}},c={},a=[{value:"What are Bootnodes?",id:"what-are-bootnodes",level:2},{value:"How to use custom bootnodes with Sedge",id:"how-to-use-custom-bootnodes-with-sedge",level:2}];function h(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsx)(o.h1,{id:"using-custom-bootnodes",children:"Using custom Bootnodes"})}),"\n",(0,t.jsx)(o.h2,{id:"what-are-bootnodes",children:"What are Bootnodes?"}),"\n",(0,t.jsx)(o.p,{children:"Bootnodes on Ethereum refer to a specific type of node that serves as an entry point for new nodes to join the Ethereum\nnetwork. These nodes are typically maintained by the Ethereum Foundation or other trusted entities, and they are\nresponsible for helping new nodes find other nodes to connect to on the network."}),"\n",(0,t.jsx)(o.p,{children:"When a new node wants to join the Ethereum network, it first needs to connect to one or more bootnodes. The bootnode\nwill then provide the new node with a list of other nodes that it can connect to on the network. Once connected to these\nnodes, the new node can start participating in the Ethereum network by verifying transactions, executing smart contracts,\nand more."}),"\n",(0,t.jsx)(o.p,{children:"Bootnodes are important for the health and security of the Ethereum network because they help ensure that new nodes can\nquickly and easily join the network, even if they don't know any other nodes to connect to. Additionally, bootnodes can\nhelp prevent certain types of attacks on the network, such as Sybil attacks, by only providing a limited number of node\naddresses to new nodes."}),"\n",(0,t.jsx)(o.h2,{id:"how-to-use-custom-bootnodes-with-sedge",children:"How to use custom bootnodes with Sedge"}),"\n",(0,t.jsxs)(o.p,{children:["Sedge supports the use of custom bootnodes, which can be useful for testing and development purposes. To use custom\nbootnodes on the Execution Client, you can specify the ",(0,t.jsx)(o.code,{children:"--execution-bootnodes"})," flag when starting Sedge. For example:"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"sedge generate full-node --execution-bootnodes enode://<bootnode-enode-url1>,enode://<bootnode-enode-ur2>,enode://<bootnode-enode-ur3>\n"})}),"\n",(0,t.jsxs)(o.p,{children:["If you want to modify the Consensus Client bootnodes, you can specify the ",(0,t.jsx)(o.code,{children:"--consensus-bootnodes"})," flag when starting Sedge. For example:"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"sedge generate full-node --consensus-bootnodes enr:-<bootnode-enr-1>,enr:-<bootnode-enr-2>,enr:-<bootnode-enr-3>\n"})}),"\n",(0,t.jsxs)(o.p,{children:["Those examples can be applied to the Sedge commands that generate a node, such as ",(0,t.jsx)(o.code,{children:"sedge generate consensus"})," or\n",(0,t.jsx)(o.code,{children:"sedge generate execution"}),", setting in each case the bootnodes for the corresponding client, for"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"sedge generate consensus --consensus-bootnodes enr:-<bootnode-enr-1>,enr:-<bootnode-enr-2>,enr:-<bootnode-enr-3>\n"})}),"\n",(0,t.jsx)(o.p,{children:"or"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"sedge generate execution --execution-bootnodes enode://<bootnode-enode-url1>,enode://<bootnode-enode-ur2>,enode://<bootnode-enode-ur3>\n"})})]})}function u(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>i});var t=n(6540);const s={},d=t.createContext(s);function r(e){const o=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(d.Provider,{value:o},e.children)}}}]);