"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2446],{9894:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var o=t(4848),d=t(8453);const s={sidebar_position:15,id:"lido-status"},a="Lido Status",i={id:"commands/lido-status",title:"Lido Status",description:"Running sedge lido-status will display detailed data for a single Lido Node Operator based on the provided rewards address.",source:"@site/docs/commands/lidoStatus.mdx",sourceDirName:"commands",slug:"/commands/lido-status",permalink:"/docs/commands/lido-status",draft:!1,unlisted:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/commands/lidoStatus.mdx",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15,id:"lido-status"},sidebar:"tutorialSidebar",previous:{title:"Show",permalink:"/docs/commands/show"},next:{title:"Monitoring",permalink:"/docs/commands/monitoring"}},r={},l=[{value:"Help",id:"help",level:2}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"lido-status",children:"Lido Status"})}),"\n",(0,o.jsxs)(n.p,{children:["Running ",(0,o.jsx)(n.code,{children:"sedge lido-status"})," will display detailed data for a single Lido Node Operator based on the provided rewards address.\nIncluding information on the node operator's status, queue details, bond and reward information, and any relevant alerts."]}),"\n",(0,o.jsx)(n.h2,{id:"help",children:"Help"}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:['When using only the rewards address as input, the command will return the first node found to be associated with that address.\nHowever, rewards addresses can be linked to multiple node operator (NO) entries in CSM (e.g., due to the "change rewards address" functionality).\nIf a rewards address is associated with multiple NOs, we recommend using the node operator ID flag (',(0,o.jsx)(n.code,{children:"-i"}),") to specify the appropriate node."]})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'$ sedge lido-status -h\nThis command retrieves and displays the status and detailed information of Lido Node Operators. \n\nThis information includes:\n- Node Operator ID.\n- Keys and queue information: available for deposit (in the queue), stuck, refunded, exited, deposited.\n- Bond and rewards information: total amount, amounts lower and higher than required, non-claimed rewards.\n\nValid args: reward address of Node Operator (rewards recipient)\n\nUsage:\n  sedge lido-status [flags] [args]\n\nFlags:\n  -n, --network string   Target network. e.g. holesky, mainnet etc. (default "holesky")\n      --l                Show detailed descriptions for each value\n  -i, --nodeID int       Your Node Operator ID (optional) (default -1)\n  -h, --help             help for lido-status\n\nGlobal Flags:\n      --log-level string   Set Log Level, e.g panic, fatal, error, warn, warning, info, debug, trace (default "info")\n'})})]})}function u(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var o=t(6540);const d={},s=o.createContext(d);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);