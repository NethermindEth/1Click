"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[85],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),f=a,m=p["".concat(c,".").concat(f)]||p[f]||u[f]||r;return n?o.createElement(m,i(i({ref:t},d),{},{components:n})):o.createElement(m,i({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4682:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var o=n(7462),a=(n(7294),n(3905));const r={sidebar_position:1,id:"cli"},i="Cli",s={unversionedId:"commands/cli",id:"commands/cli",title:"Cli",description:"sedge cli run the setup tool on an interactive mode.",source:"@site/docs/commands/cli.mdx",sourceDirName:"commands",slug:"/commands/cli",permalink:"/docs/commands/cli",draft:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/commands/cli.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"cli"},sidebar:"tutorialSidebar",previous:{title:"Commands",permalink:"/docs/commands"},next:{title:"Clients",permalink:"/docs/commands/clients"}},c={},l=[{value:"Help",id:"help",level:2},{value:"Execution Example",id:"execution-example",level:2}],d={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cli"},"Cli"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"sedge cli")," run the setup tool on an interactive mode."),(0,a.kt)("h2",{id:"help"},"Help"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'$ sedge cli -h\nThis command will guide you through the process of setting up one of these node types:\n\n- Full Node (execution + consensus + validator)\n- Full Node without Validator (execution + consensus)\n- Execution Node\n- Consensus Node\n- Validator Node\n- Lido CSM Node\n\nFollow the prompts to select the options you want for your node. At the end of the process, you will\nbe asked to run the generated setup or not. If you chose to run the setup, it will be executed for you\nusing docker compose command behind the scenes.\n\nUsage:\n  sedge cli [flags]\n\nFlags:\n  -h, --help   help for cli\n\nGlobal Flags:\n      --log-level string   Set Log Level, e.g panic, fatal, error, warn, warning, info, debug, trace (default "info")\n')),(0,a.kt)("h2",{id:"execution-example"},"Execution Example"),(0,a.kt)("p",null,"As this is an interactive command, it will ask you a series of questions to set up your node. According to the answers, it will create a flow of questions and generate a ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," and a ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," file with the configuration you selected."),(0,a.kt)("p",null,"This is an example of what you can expect:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sedge cli\n2023-03-20 21:54:08 -- [INFO] [Logger Init] Log level: info\n2023-03-20 21:54:08 -- [INFO] You are running the latest version of sedge. Version:  v1.3.1\n? Select network mainnet\n? Select node type full-node\n? Generation path /root/sedge-data\n? Container tag, sedge will add to each container and the network, a suffix with the tag\n? Do you want to set up a validator? Yes\n? Enable MEV Boost? Yes\n? Mev-Boost image flashbots/mev-boost:latest\n? Insert relay URLs if you don't want to use the default values listed below Default values are listed below. (\nhttps://0xac6e77dfe25ecd6110b8e780608cce0dab71fdd5ebea22a16c0205200f2f8e2e3ad3b71d3499c54ad14d6c21b41a37ae@boost-relay.flashbots.net\nhttps://0x8b5d2e73e2a3a55c6c87b8b6eb92e0149a125c852751db1422fa951e42a09b82c142c3ea98d0d9930b056a3bc9896b8f@bloxroute.max-profit.blxrbdn.com\n? Insert relay URLs if you don't want to use the default values listed below Default values are listed below.\n\nhttps://0xac6e77dfe25ecd6110b8e780608cce0dab71fdd5ebea22a16c0205200f2f8e2e3ad3b71d3499c54ad14d6c21b41a37ae@boost-relay.flashbots.net\nhttps://0x8b5d2e73e2a3a55c6c87b8b6eb92e0149a125c852751db1422fa951e42a09b82c142c3ea98d0d9930b056a3bc9896b8f@bloxroute.max-profit.blxrbdn.com\nhttps://0x9000009807ed12c1f08bf4e81c6da3ba8e3fc3d953898ce0102433094e5f22f21102ec057841fcb81978ed1ea0fa8246@builder-relay-mainnet.blocknative.com\nhttps://0xb3ee7afcf27f1f1259ac1787876318c6584ee353097a50ed84f51a1f21a323b3736f271a895c7ce918c038e4265918be@relay.edennetwork.io\nhttps://0xa1559ace749633b997cb3fdacffb890aeebdb0f5a3b6aaa7eeeaf1a38af0a8fe88b9e4b1f61f236d2e64d95733327a62@relay.ultrasound.money\n\n? Select execution client nethermind\n? Select consensus client prysm\n? Select validator client prysm\n? Validator grace period. This is the number of epochs the validator will wait for security reasons before starting 2\n? Graffiti to be used by the validator (press enter to skip it) neth-prysm\n? Checkpoint sync URL https://beaconstate.ethstaker.cc\n? Please enter the Fee Recipient address 0xEf8801eaf234ff82801821FFe2d78D60a0237F97\n? Do you want to expose all ports? No\n? Select JWT source create\n2023-03-20 21:54:51 -- [INFO] Generating JWT secret for client authentication\n2023-03-20 21:54:51 -- [INFO] JWT secret generated\n2023-03-20 21:54:51 -- [INFO] Generating docker-compose script for current selection of clients\n2023-03-20 21:54:51 -- [INFO] Generated docker-compose script for current selection of clients\n2023-03-20 21:54:51 -- [INFO] Generating environment file for current selection of clients\n2023-03-20 21:54:51 -- [INFO] Generated environment file for current selection of clients\n2023-03-20 21:54:51 -- [INFO] Cleaning generated docker-compose and environment files\n2023-03-20 21:54:51 -- [INFO] Cleaned generated files\n? Select keystore source create\n? Select mnemonic source create\n? Select passphrase source random\n? Withdrawal address 0xB26FCB9D0bf72F881dCfa9E4Eb3B23fB75Ae9A15\n? Number of validators 20\n? Existing validators. This number will be used as the initial index for the generated keystores. 3\n2023-03-20 21:55:12 -- [INFO] Generating keystores...\n2023-03-20 21:55:12 -- [INFO] Keystores generated successfully\n2023-03-20 21:55:13 -- [INFO] Importing validator keys into the validator client...\n2023-03-20 21:55:13 -- [INFO] Setting up containers\n2023-03-20 21:55:13 -- [INFO] Running command: docker compose -f /root/sedge-data/docker-compose.yml build validator\n2023-03-20 21:55:13 -- [INFO] Running command: docker compose -f /root/sedge-data/docker-compose.yml pull validator\n[+] Running 1/1\n \u283f validator Pulled                                                                                                                                                                                                                                                                                                                                                                                                                    0.5s\n2023-03-20 21:55:13 -- [INFO] Running command: docker compose -f /root/sedge-data/docker-compose.yml create validator\n[+] Running 2/0\n \u283f Container sedge-validator-blocker  Created                                                                                                                                                                                                                                                                                                                                                                                          0.0s\n \u283f Container sedge-validator-client   Created                                                                                                                                                                                                                                                                                                                                                                                          0.0s\n2023-03-20 21:55:13 -- [INFO] Importing validator keys\n2023-03-20 21:55:13 -- [INFO] The keys import container is starting\n2023-03-20 21:55:17 -- [INFO] Validator keys imported successfully\n? Interchange slashing protection file path slashing_protection.json\n2023-03-20 21:55:43 -- [INFO] Importing slashing data to client prysm from /root/slashing_protection.json\n2023-03-20 21:55:43 -- [INFO] The slashing protection container is starting...\n2023-03-20 21:55:43 -- [INFO] The slashing container ends successfully.\n? Run services now? No\n2023-03-20 21:55:48 -- [INFO]\nYour setup is ready. You can run it anytime using the 'sedge run --path /root/sedge-data' command. Feel free to explore the files and make changes, although Sedge is not accountable for any misbehavior or issue caused by any modification done to the setup. Stay tuned for more updates and features!\n\nHappy Sedging!\n")))}u.isMDXComponent=!0}}]);