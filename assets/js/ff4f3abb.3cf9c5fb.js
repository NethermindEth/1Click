"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7941],{7162:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var r=n(4848),s=n(8453);n(1470),n(9365);const o={sidebar_position:10,id:"staking-with-obol-DV"},a="Set up an Obol DV Node with Sedge",i={id:"quickstart/staking-with-obol-DV",title:"Set up an Obol DV Node with Sedge",description:"What are Distributed Validators?",source:"@site/docs/quickstart/charon.mdx",sourceDirName:"quickstart",slug:"/quickstart/staking-with-obol-DV",permalink:"/docs/quickstart/staking-with-obol-DV",draft:!1,unlisted:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/quickstart/charon.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,id:"staking-with-obol-DV"},sidebar:"tutorialSidebar",previous:{title:"Staking with Lido using Sedge",permalink:"/docs/quickstart/staking-with-lido"},next:{title:"Lido Exporter",permalink:"/docs/quickstart/lido-exporter"}},l={},d=[{value:"What are Distributed Validators?",id:"what-are-distributed-validators",level:2},{value:"Workflow breakdown",id:"workflow-breakdown",level:2},{value:"Using Sedge for setting up Obol DV node",id:"using-sedge-for-setting-up-obol-dv-node",level:2},{value:"Perform DKG and Generate DKG components",id:"perform-dkg-and-generate-dkg-components",level:3},{value:"Setting up your full node",id:"setting-up-your-full-node",level:3}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"set-up-an-obol-dv-node-with-sedge",children:"Set up an Obol DV Node with Sedge"})}),"\n",(0,r.jsx)(t.h2,{id:"what-are-distributed-validators",children:"What are Distributed Validators?"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.a,{href:"https://docs.obol.org/docs/int/key-concepts",children:"Read more about Obol DVs here"})})}),"\n",(0,r.jsx)(t.p,{children:"Sedge supports setting up distributed validator nodes just like it supports setting up a traditional validator node. This guide will walk you through the process of setting up a DV node using Sedge."}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsxs)(t.p,{children:["Read more about how to generate ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.a,{href:"https://docs.obol.org/docs/next/start/quickstart_group",children:"Distributed Validator keys here"})}),"."]})}),"\n",(0,r.jsx)(t.h2,{id:"workflow-breakdown",children:"Workflow breakdown"}),"\n",(0,r.jsx)(t.p,{children:"The Obol DV Setup process involves a few steps:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Perform Obol DKG process"}),": Generate distributed node contents and validator keys compatible with Obol DVT using ",(0,r.jsx)(t.a,{href:"https://docs.obol.org/docs/next/start/quickstart_group",children:"DKG process"}),"."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Set Up Your Full Node"}),": Set up your full node with ",(0,r.jsx)(t.strong,{children:"sedge generate"})," command."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Import DKG Validator keys"}),": Import the keys generated in Step 1 using the ",(0,r.jsx)(t.strong,{children:"sedge import_key"})," command"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Run the cluster"}),": Run the cluster using ",(0,r.jsx)(t.strong,{children:"sedge run"})," command."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Let's dive into each step in detail."}),"\n",(0,r.jsx)(t.h2,{id:"using-sedge-for-setting-up-obol-dv-node",children:"Using Sedge for setting up Obol DV node"}),"\n",(0,r.jsx)(t.h3,{id:"perform-dkg-and-generate-dkg-components",children:"Perform DKG and Generate DKG components"}),"\n",(0,r.jsxs)(t.p,{children:["To get started with Obol DVT using Sedge, you first need to generate your validator keys and deposit data and DV node components with ",(0,r.jsx)(t.a,{href:"https://holesky.launchpad.obol.org/",children:"Obol DV Launchpad"}),".\nYou need to follow the steps listed below"]}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://docs.obol.org/docs/next/start/quickstart_group#step-1-get-your-enr",children:"Step 1: Get your ENR"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://docs.obol.org/docs/next/start/quickstart_group#step-2-create-a-cluster-or-accept-an-invitation-to-a-cluster",children:"Step 2: Create a cluster or accept an invitation to a cluster"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://docs.obol.org/docs/next/start/quickstart_group#step-3-run-the-distributed-key-generation-dkg-ceremony",children:"Step 3: Run the Distributed Key Generation (DKG) ceremony"})}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["At this stage, if DKG process is successful, a folder with name ",(0,r.jsx)(t.strong,{children:".charon"})," will be created with the following structure for a cluster of 2 validators."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"$sedge % tree .charon\n.\n\u251c\u2500\u2500 charon-enr-private-key\n\u251c\u2500\u2500 cluster-lock.json\n\u251c\u2500\u2500 deposit-data.json\n\u2514\u2500\u2500 validator_keys\n    \u251c\u2500\u2500 keystore-0.json\n    \u251c\u2500\u2500 keystore-0.txt\n    \u251c\u2500\u2500 keystore-1.json\n    \u251c\u2500\u2500 keystore-1.txt\n"})}),"\n",(0,r.jsx)(t.h3,{id:"setting-up-your-full-node",children:"Setting up your full node"}),"\n",(0,r.jsxs)(t.p,{children:["Once the DKG process is complete and ",(0,r.jsx)(t.code,{children:".charon"})," folder and its contents are generated, you can set up your full node using ",(0,r.jsx)(t.strong,{children:"Sedge"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"sedge generate full-node --validator=teku --consensus=prysm --execution=nethermind --network=holesky --distributed\n"})}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsxs)(t.p,{children:["This command will generate a DV enabled cluster for the Holesky testnet.\nIf supported, you can set other networks by changing the ",(0,r.jsx)(t.code,{children:"--network"})," flag.\nIf supported, you can set other execution, consensus and validator clients using the respective flags."]})}),"\n",(0,r.jsxs)(t.p,{children:["Once the full node setup process is complete a folder with name ",(0,r.jsx)(t.code,{children:"sedge-data"})," will be created."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"$sedge % tree sedge-data\ntree sedge-data                                                                                             \nsedge-data\n\u251c\u2500\u2500 docker-compose.yml\n\u2514\u2500\u2500 jwtsecret\n"})}),"\n",(0,r.jsx)(t.p,{children:"Next, run the import keys step:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"sedge import-key --distributed --network holesky teku\n"})}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsxs)(t.p,{children:["This command will import the keys inside ",(0,r.jsx)(t.code,{children:".charon"})," folder into the validator client.\nIf supported, you can set other networks by changing the ",(0,r.jsx)(t.code,{children:"--network"})," flag.\nThe validator client should be identical to the client used in the full-node generate command"]})}),"\n",(0,r.jsxs)(t.p,{children:["Once the private keys import process is complete, the ",(0,r.jsx)(t.code,{children:"sedge-data"})," folder contents will be updated."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"sedge % tree sedge-data                                      \nsedge-data\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 jwtsecret\n\u251c\u2500\u2500 keystore\n\u2502   \u251c\u2500\u2500 deposit-data.json\n\u2502   \u251c\u2500\u2500 keystore-0.txt\n\u2502   \u251c\u2500\u2500 keystore-1.txt\n\u2502   \u2514\u2500\u2500 validator_keys\n\u2502       \u251c\u2500\u2500 keystore-0.json\n\u2502       \u251c\u2500\u2500 keystore-1.json\n\u2514\u2500\u2500 validator-data\n    \u251c\u2500\u2500 keys\n    \u2502   \u251c\u2500\u2500 keystore-0.json\n    \u2502   \u251c\u2500\u2500 keystore-1.json\n    \u2514\u2500\u2500 passwords\n        \u251c\u2500\u2500 keystore-0.txt\n        \u251c\u2500\u2500 keystore-1.txt\n"})}),"\n",(0,r.jsx)(t.p,{children:"Finally run the cluster."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"sedge run\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>a});n(6540);var r=n(8215);const s={tabItem:"tabItem_Ymn6"};var o=n(4848);function a(e){let{children:t,hidden:n,className:a}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,a),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>v});var r=n(6540),s=n(8215),o=n(3104),a=n(6347),i=n(205),l=n(7485),d=n(1682),c=n(679);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:s}}=e;return{value:t,label:n,attributes:r,default:s}}))}(n);return function(e){const t=(0,d.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const s=(0,a.W6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(s.location.search);t.set(o,e),s.replace({...s.location,search:t.toString()})}),[o,s])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,o=h(e),[a,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[d,u]=g({queryString:n,groupId:s}),[b,m]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,o]=(0,c.Dv)(n);return[s,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:s}),f=(()=>{const e=d??b;return p({value:e,tabValues:o})?e:null})();(0,i.A)((()=>{f&&l(f)}),[f]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),m(e)}),[u,m,o]),tabValues:o}}var m=n(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(4848);function k(e){let{className:t,block:n,selectedValue:r,selectValue:a,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.a_)(),c=e=>{const t=e.currentTarget,n=l.indexOf(t),s=i[n].value;s!==r&&(d(t),a(s))},u=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t),children:i.map((e=>{let{value:t,label:n,attributes:o}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>l.push(e),onKeyDown:u,onClick:c,...o,className:(0,s.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function j(e){let{lazy:t,children:n,selectedValue:o}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===o));return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==o})))})}function y(e){const t=b(e);return(0,x.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,x.jsx)(k,{...t,...e}),(0,x.jsx)(j,{...t,...e})]})}function v(e){const t=(0,m.A)();return(0,x.jsx)(y,{...e,children:u(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var r=n(6540);const s={},o=r.createContext(s);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);