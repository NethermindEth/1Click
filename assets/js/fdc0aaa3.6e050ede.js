"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5593],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=i.createContext({}),s=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,h=u["".concat(d,".").concat(m)]||u[m]||p[m]||o;return n?i.createElement(h,l(l({ref:t},c),{},{components:n})):i.createElement(h,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=u;var r={};for(var d in t)hasOwnProperty.call(t,d)&&(r[d]=t[d]);r.originalType=e,r.mdxType="string"==typeof e?e:a,l[1]=r;for(var s=2;s<o;s++)l[s]=n[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9277:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>s});var i=n(7462),a=(n(7294),n(3905));const o={sidebar_position:3,slug:"new-clients"},l="Adding new Clients",r={unversionedId:"guidelines/new-clients",id:"guidelines/new-clients",title:"Adding new Clients",description:"We can add new Consensus, Execution or Validator clients to Sedge, you will mostly only need to add a few config files",source:"@site/docs/guidelines/new-clients.mdx",sourceDirName:"guidelines",slug:"/guidelines/new-clients",permalink:"/docs/guidelines/new-clients",draft:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/guidelines/new-clients.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,slug:"new-clients"},sidebar:"tutorialSidebar",previous:{title:"Adding new Networks",permalink:"/docs/guidelines/new-networks"},next:{title:"Troubleshooting",permalink:"/docs/troubleshooting"}},d={},s=[{value:"Adding a Consensus Client",id:"adding-a-consensus-client",level:2},{value:"Adding an Execution Client",id:"adding-an-execution-client",level:2},{value:"Adding a Validator Client",id:"adding-a-validator-client",level:2}],c={toc:s};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"adding-new-clients"},"Adding new Clients"),(0,a.kt)("p",null,"We can add new Consensus, Execution or Validator clients to Sedge, you will mostly only need to add a few config files\nhere and there."),(0,a.kt)("h2",{id:"adding-a-consensus-client"},"Adding a Consensus Client"),(0,a.kt)("p",null,"While adding a Consensus Client, you should follow this steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Add a template under ",(0,a.kt)("inlineCode",{parentName:"li"},"templates/services/merge/consensus/")," that contains all the docker compose parts for run that\nnew client."),(0,a.kt)("li",{parentName:"ol"},"Add what is going to be the environment vars for the docker compose file under each of the supported networks for this\nnew client, for example:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"templates/envs/[network]/consensus/new_client.tmpl"))),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Update the script that check for updates on the images at ",(0,a.kt)("inlineCode",{parentName:"li"},"scripts/check-image-updates.sh"),"."),(0,a.kt)("li",{parentName:"ol"},"Update documentation, including all the references on ",(0,a.kt)("inlineCode",{parentName:"li"},"docs/docs")," folder, that are going to be displayed on Sedge\nofficial documentation, and on the ",(0,a.kt)("inlineCode",{parentName:"li"},"Readme.md")),(0,a.kt)("li",{parentName:"ol"},"Add entry on the ",(0,a.kt)("inlineCode",{parentName:"li"},"CHANGELOG.md"))),(0,a.kt)("h2",{id:"adding-an-execution-client"},"Adding an Execution Client"),(0,a.kt)("p",null,"You can follow as an example ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/NethermindEth/sedge/pull/156"},"this PR"),", that adds Erigon to the\nsupported Execution Clients."),(0,a.kt)("p",null,"The most important things to add:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Add a template under ",(0,a.kt)("inlineCode",{parentName:"li"},"templates/services/merge/execution/")," that contains all the docker compose parts for run that\nnew client."),(0,a.kt)("li",{parentName:"ol"},"Add what is going to be the environment vars for the docker compose file under each of the supported networks for this\nnew client, for example:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"templates/envs/[network]/execution/new_client.tmpl"))),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Update the script that check for updates on the images at ",(0,a.kt)("inlineCode",{parentName:"li"},"scripts/check-image-updates.sh"),"."),(0,a.kt)("li",{parentName:"ol"},"Update documentation, including all the references on ",(0,a.kt)("inlineCode",{parentName:"li"},"docs/docs")," folder, that are going to be displayed on Sedge\nofficial documentation, and on the ",(0,a.kt)("inlineCode",{parentName:"li"},"Readme.md")),(0,a.kt)("li",{parentName:"ol"},"Add entry on the ",(0,a.kt)("inlineCode",{parentName:"li"},"CHANGELOG.md")),(0,a.kt)("li",{parentName:"ol"},"Run tests, and add new tests if needed.")),(0,a.kt)("h2",{id:"adding-a-validator-client"},"Adding a Validator Client"),(0,a.kt)("p",null,"While adding a Validator Client, you should follow this steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Add a template under ",(0,a.kt)("inlineCode",{parentName:"li"},"templates/services/merge/validator/")," that contains all the docker compose parts for run that\nnew client."),(0,a.kt)("li",{parentName:"ol"},"Make sure to add any necessary code for the validator keystore import service. Make your chances in the\n",(0,a.kt)("inlineCode",{parentName:"li"},"cli/actions/importKeys.go")," file and check how has been done for other validators. The service should import properly\nall the keystores in the right place."),(0,a.kt)("li",{parentName:"ol"},"Add what is going to be the environment vars for the docker compose file under each of the supported networks for this\nnew client, for example:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"templates/envs/[network]/validator/new_client.tmpl"),".")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Update the script that check for updates on the images at ",(0,a.kt)("inlineCode",{parentName:"li"},"scripts/check-image-updates.sh"),"."),(0,a.kt)("li",{parentName:"ol"},"Update documentation, including all the references on ",(0,a.kt)("inlineCode",{parentName:"li"},"docs/docs")," folder, that are going to be displayed on Sedge\nofficial documentation, and on the ",(0,a.kt)("inlineCode",{parentName:"li"},"Readme.md")),(0,a.kt)("li",{parentName:"ol"},"Add entry on the ",(0,a.kt)("inlineCode",{parentName:"li"},"CHANGELOG.md")),(0,a.kt)("li",{parentName:"ol"},"Run tests, and add new tests if needed."),(0,a.kt)("li",{parentName:"ol"},"Create a PR with your changes, and we will review it as soon as possible.")))}p.isMDXComponent=!0}}]);