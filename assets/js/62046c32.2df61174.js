"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9931],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>c});var o=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=o.createContext({}),s=function(e){var t=o.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=s(e.components);return o.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,d=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(a),c=n,h=m["".concat(d,".").concat(c)]||m[c]||p[c]||i;return a?o.createElement(h,r(r({ref:t},u),{},{components:a})):o.createElement(h,r({ref:t},u))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:n,r[1]=l;for(var s=2;s<i;s++)r[s]=a[s];return o.createElement.apply(null,r)}return o.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>r});var o=a(7294),n=a(6010);const i="tabItem_Ymn6";function r(e){let{children:t,hidden:a,className:r}=e;return o.createElement("div",{role:"tabpanel",className:(0,n.Z)(i,r),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>c});var o=a(7462),n=a(7294),i=a(6010),r=a(2389),l=a(7392),d=a(7094),s=a(2466);const u="tabList__CuJ",p="tabItem_LNqP";function m(e){var t;const{lazy:a,block:r,defaultValue:m,values:c,groupId:h,className:k}=e,g=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=c??g.map((e=>{let{props:{value:t,label:a,attributes:o}}=e;return{value:t,label:a,attributes:o}})),f=(0,l.l)(y,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===m?m:m??(null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)??g[0].props.value;if(null!==v&&!y.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:b}=(0,d.U)(),[N,S]=(0,n.useState)(v),C=[],{blockElementScrollPositionUntilNextRender:M}=(0,s.o5)();if(null!=h){const e=w[h];null!=e&&e!==N&&y.some((t=>t.value===e))&&S(e)}const L=e=>{const t=e.currentTarget,a=C.indexOf(t),o=y[a].value;o!==N&&(M(t),S(o),null!=h&&b(h,String(o)))},O=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=C.indexOf(e.currentTarget)+1;a=C[t]??C[0];break}case"ArrowLeft":{const t=C.indexOf(e.currentTarget)-1;a=C[t]??C[C.length-1];break}}null==(t=a)||t.focus()};return n.createElement("div",{className:(0,i.Z)("tabs-container",u)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},k)},y.map((e=>{let{value:t,label:a,attributes:r}=e;return n.createElement("li",(0,o.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>C.push(e),onKeyDown:O,onFocus:L,onClick:L},r,{className:(0,i.Z)("tabs__item",p,null==r?void 0:r.className,{"tabs__item--active":N===t})}),a??t)}))),a?(0,n.cloneElement)(g.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function c(e){const t=(0,r.Z)();return n.createElement(m,(0,o.Z)({key:String(t)},e))}},7837:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var o=a(7462),n=(a(7294),a(3905));a(5488),a(5162);const i={sidebar_position:9,id:"staking-with-lido"},r="Staking with Lido using Sedge",l={unversionedId:"quickstart/staking-with-lido",id:"quickstart/staking-with-lido",title:"Staking with Lido using Sedge",description:"What is the Lido Community Staking Module (CSM)?",source:"@site/docs/quickstart/lido.mdx",sourceDirName:"quickstart",slug:"/quickstart/staking-with-lido",permalink:"/docs/quickstart/staking-with-lido",draft:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/quickstart/lido.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,id:"staking-with-lido"},sidebar:"tutorialSidebar",previous:{title:"Migrate from another setup",permalink:"/docs/quickstart/samples/migrate-setup"},next:{title:"Running an Optimism Node with Sedge",permalink:"/docs/quickstart/running-optimism-node"}},d={},s=[{value:"What is the Lido Community Staking Module (CSM)?",id:"what-is-the-lido-community-staking-module-csm",level:2},{value:"Workflow breakdown",id:"workflow-breakdown",level:2},{value:"Using Sedge for Lido CSM",id:"using-sedge-for-lido-csm",level:2},{value:"Generating Validator Keys with the respective deposit data",id:"generating-validator-keys-with-the-respective-deposit-data",level:3},{value:"Setting up your full node with Lido CSM settings enabled",id:"setting-up-your-full-node-with-lido-csm-settings-enabled",level:3},{value:"Uploading deposit data and registering the Node Operator",id:"uploading-deposit-data-and-registering-the-node-operator",level:2},{value:"Managing Your Node Operator",id:"managing-your-node-operator",level:2},{value:"Checking Node Operator Status",id:"checking-node-operator-status",level:3},{value:"Description",id:"description",level:4},{value:"Additional Management Tasks",id:"additional-management-tasks",level:3}],u={toc:s};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,o.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"staking-with-lido-using-sedge"},"Staking with Lido using Sedge"),(0,n.kt)("h2",{id:"what-is-the-lido-community-staking-module-csm"},"What is the Lido Community Staking Module (CSM)?"),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"https://operatorportal.lido.fi/modules/community-staking-module"},"Lido Community Staking Module")," (CSM) is a protocol that allows anyone, especially community stakers and solo stakers,\nto become a Lido Node Operator in a permissionless manner by providing an ETH-based bond as security collateral. CSM offers various benefits,\nsuch as ",(0,n.kt)("a",{parentName:"p",href:"https://operatorportal.lido.fi/modules/community-staking-module#block-b449869616354425a1c616f292cd43db"},"smoothed rewards")," with other Lido modules received via stETH, reasonable low bond requirements (accepted in ETH, stETH, wstETH), and a user-friendly experience."),(0,n.kt)("p",null,"Sedge supports the Lido CSM, allowing users to generate validator keys and set up their full nodes with ease. This guide\nwill walk you through the process of staking with Lido CSM using Sedge."),(0,n.kt)("p",null,"If you are interested in becoming a Lido node operator, make sure to read the ",(0,n.kt)("a",{parentName:"p",href:"https://operatorportal.lido.fi/modules/community-staking-module#block-c58d307283e942ecab5eeb96f9a89235"},"Node Operator Expectations")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Lido CSM is ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"https://operatorportal.lido.fi/modules/community-staking-module"},"currently live and permissionless on the Holesky testnet")),".\nThe Mainnet launch is expected soon. You can check your eligibility for the Early Adoption program on Mainnet ",(0,n.kt)("a",{parentName:"p",href:"https://lidofinance.github.io/csm-ea-checker/"},"here"),".")),(0,n.kt)("h2",{id:"workflow-breakdown"},"Workflow breakdown"),(0,n.kt)("p",null,"The Lido CSM staking process involves several steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Generate Validator Keys and Deposit Data"),": Generate validator keys compatible with Lido CSM with withdrawal credentials set to Lido Withdrawal Vault."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Set Up Your Full Node"),": Set up your full node with Lido CSM settings enabled (Fee recipient pointing to Lido Execution Layer Rewards Vault, and using designated MEV relays for Lido CSM) and the designed validator keys."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Upload Deposit Data"),": Upload the deposit data to the Lido CSM Widget and provide the required bond amount in ETH, stETH, or wstETH."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Wait for Deposit Confirmation"),": Wait for your CSM validator keys to be deposited through the protocol and ensure your node remains online in the meantime. ")),(0,n.kt)("p",null,"Sedge simplifies the process of staking with Lido CSM by providing a seamless workflow for:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Generating validator keys with the respective deposit data (Step 1)"),(0,n.kt)("li",{parentName:"ul"},"Setting up your full node with Lido CSM settings enabled (Step 2)"),(0,n.kt)("li",{parentName:"ul"},"Importing existing Lido CSM validator keys to your Sedge node (In case you already have validator keys generated and running but want to migrate your clients or to Sedge)")),(0,n.kt)("p",null,"This means you only have to ",(0,n.kt)("a",{parentName:"p",href:"#uploading-deposit-data-and-registering-the-node-operator"},"upload the deposit data to Lido CSM and purchase the bond manually"),". Sedge will take care of the rest."),(0,n.kt)("p",null,"Let's dive into each step in detail."),(0,n.kt)("h2",{id:"using-sedge-for-lido-csm"},"Using Sedge for Lido CSM"),(0,n.kt)("p",null,"You can run ",(0,n.kt)("inlineCode",{parentName:"p"},"sedge cli")," to kickstart Sedge's ",(0,n.kt)("a",{parentName:"p",href:"./complete-guide#21-one-click-interactive-setup"},"one-click interactive setup"),". In this step, you will be guided through generating validator keys and setting up your full node with Lido CSM settings enabled."),(0,n.kt)("p",null,"Alternatively, for a more controlled setup, you can use the following commands to generate validator keys and set up your full node with Lido CSM settings enabled."),(0,n.kt)("h3",{id:"generating-validator-keys-with-the-respective-deposit-data"},"Generating Validator Keys with the respective deposit data"),(0,n.kt)("p",null,"To get started with CSM using Sedge, you first need to generate your validator keys and deposit data. Sedge simplifies this process\nwith the ",(0,n.kt)("inlineCode",{parentName:"p"},"sedge keys")," ",(0,n.kt)("a",{parentName:"p",href:"/docs/commands/keys"},"command"),". Use the ",(0,n.kt)("inlineCode",{parentName:"p"},"--lido")," flag to generate keys compatible with Lido CSM:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sedge keys --lido --network holesky\n")),(0,n.kt)("h3",{id:"setting-up-your-full-node-with-lido-csm-settings-enabled"},"Setting up your full node with Lido CSM settings enabled"),(0,n.kt)("p",null,"Once the keys are generated, you can set up your full node:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sedge generate full-node --lido --network holesky\n")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"This command will generate a setup with the Lido CSM enabled for the Holesky testnet.\nIf supported, you can set other networks by changing the ",(0,n.kt)("inlineCode",{parentName:"p"},"--network")," flag.")),(0,n.kt)("p",null,"This command will generate a new set of validator keys with the following parameters:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"withdrawal_address")," set to the Lido Withdrawal Vault address"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"chain")," set to the appropriate network (e.g., ",(0,n.kt)("inlineCode",{parentName:"li"},"holesky"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"mainnet"),")"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"fee_recipient")," set to the Lido Execution Layer Rewards Vault address"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"mev_relay")," set to the designated MEV relays for Lido CSM on the appropriate network")),(0,n.kt)("p",null,"You can now proceed to run the generated setup for your full node with the Lido CSM settings enabled and the validator keys you want to run with ",(0,n.kt)("a",{parentName:"p",href:"/docs/commands/run"},(0,n.kt)("inlineCode",{parentName:"a"},"sedge run"))," (although not filled and registered yet)."),(0,n.kt)("h2",{id:"uploading-deposit-data-and-registering-the-node-operator"},"Uploading deposit data and registering the Node Operator"),(0,n.kt)("p",null,"After generating your validator keys and setting up your node, you need to register your wallet as a Node Operator to\nwork with Lido CSM:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Upload the newly generated deposit data file pertaining to your CSM keystores onto the Lido CSM Widget\nand provide the required bond amount in ETH, stETH, or wstETH. Before uploading, ensure that your nodes are synced,\nrunning and ready for validator activation.")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"The official ","[instructions guide]"," (",(0,n.kt)("a",{parentName:"p",href:"https://dvt-homestaker.stakesaurus.com/bonded-validators-setup/lido-csm/upload-remove-view-validator-keys#upload-keys"},"https://dvt-homestaker.stakesaurus.com/bonded-validators-setup/lido-csm/upload-remove-view-validator-keys#upload-keys"),") provides detailed instructions on how to upload the deposit data and register your Node Operator.")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"Wait for your CSM validator keys to be deposited through the protocol and ensure your node remains online in the\nmeantime.")),(0,n.kt)("h2",{id:"managing-your-node-operator"},"Managing Your Node Operator"),(0,n.kt)("p",null,"Once your validator keys are deposited and your node is running, you can manage your Node Operator using Sedge commands and the Lido\nCSM Widget."),(0,n.kt)("h3",{id:"checking-node-operator-status"},"Checking Node Operator Status"),(0,n.kt)("p",null,"To view detailed data about your Node Operator, use the ",(0,n.kt)("inlineCode",{parentName:"p"},"sedge lido-status")," ",(0,n.kt)("a",{parentName:"p",href:"/docs/commands/lido-status"},"command"),". This command displays information specific to the Node Operator based on the provided rewards address."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sedge lido-status <your_reward_address>\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("inlineCode",{parentName:"p"},"rewardAddress")," is the ultimate recipient of the rewards. It can perform the following actions regarding the CSM Node Operator:"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Claim rewards"),(0,n.kt)("li",{parentName:"ul"},"Propose a new ",(0,n.kt)("inlineCode",{parentName:"li"},"rewardAddress")),(0,n.kt)("li",{parentName:"ul"},"Reset ",(0,n.kt)("inlineCode",{parentName:"li"},"managerAddress")," to make it equal to the current ",(0,n.kt)("inlineCode",{parentName:"li"},"rewardAddress"))),(0,n.kt)("p",{parentName:"admonition"},"The ","[Lido Documentation]"," (",(0,n.kt)("a",{parentName:"p",href:"https://docs.lido.fi/staking-modules/csm/guides/addresses#reward-address"},"https://docs.lido.fi/staking-modules/csm/guides/addresses#reward-address"),") provides detailed information about the ",(0,n.kt)("inlineCode",{parentName:"p"},"rewardAddress"),".")),(0,n.kt)("h4",{id:"description"},"Description"),(0,n.kt)("p",null,"This command helps you monitor your Node Operator's performance by displaying:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Node Operator ID"),(0,n.kt)("li",{parentName:"ul"},"Queue information (e.g., available for deposit, stuck, refunded, exited, deposited)"),(0,n.kt)("li",{parentName:"ul"},"Bond and rewards details")),(0,n.kt)("h3",{id:"additional-management-tasks"},"Additional Management Tasks"),(0,n.kt)("p",null,"Using the Lido CSM Widget, it allows you to:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Claim bond and rewards"),(0,n.kt)("li",{parentName:"ul"},"Add extra bond amount"),(0,n.kt)("li",{parentName:"ul"},"Propose new Rewards and Manager addresses"),(0,n.kt)("li",{parentName:"ul"},"Add or remove validator keys")),(0,n.kt)("p",null,"Remember to keep your node running smoothly and follow the Lido protocol rules to avoid any penalties or bond confiscation."),(0,n.kt)("p",null,"For more detailed information on managing your Node Operator, refer to the\n",(0,n.kt)("a",{parentName:"p",href:"https://operatorportal.lido.fi/modules/community-staking-module#block-d3ad2b2bd3994a06b19dccc0794ac8d6"},"Lido CSM documentation"),"."))}p.isMDXComponent=!0}}]);