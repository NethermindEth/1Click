"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1251],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var a=o.createContext({}),c=function(e){var n=o.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return o.createElement(a.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,a=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=r,g=u["".concat(a,".").concat(m)]||u[m]||p[m]||s;return t?o.createElement(g,i(i({ref:n},d),{},{components:t})):o.createElement(g,i({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=u;var l={};for(var a in n)hasOwnProperty.call(n,a)&&(l[a]=n[a]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<s;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6304:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var o=t(7462),r=(t(7294),t(3905));const s={sidebar_position:8,id:"logs"},i="Logs",l={unversionedId:"commands/logs",id:"commands/logs",title:"Logs",description:"Running sedge logs will shut down running containers using docker compose CLI.",source:"@site/docs/commands/logs.mdx",sourceDirName:"commands",slug:"/commands/logs",permalink:"/docs/commands/logs",draft:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/commands/logs.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,id:"logs"},sidebar:"tutorialSidebar",previous:{title:"Keys",permalink:"/docs/commands/keys"},next:{title:"Networks",permalink:"/docs/commands/networks"}},a={},c=[{value:"Help",id:"help",level:2},{value:"Execution Example",id:"execution-example",level:2}],d={toc:c};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"logs"},"Logs"),(0,r.kt)("p",null,"Running ",(0,r.kt)("inlineCode",{parentName:"p"},"sedge logs")," will shut down running containers using docker compose CLI."),(0,r.kt)("h2",{id:"help"},"Help"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'$ sedge logs -h\nInitializing configuration\nGet running container logs using docker-compose CLI. If no services are provided, the logs of all running services will be displayed.\n\n    By default will run \'docker compose -f <script> logs --follow <service>\'\n\nUsage:\n  sedge logs [flags] [services]\n\nFlags:\n  -h, --help          help for logs\n  -p, --path string   docker-compose script path (default "./docker-compose-scripts")\n  -t, --tail int      Tail the number of desired logs. If not set, or set to 0, logs are followed.\n\nGlobal Flags:\n      --logLevel string   Set Log Level (default "info")\n')),(0,r.kt)("h2",{id:"execution-example"},"Execution Example"),(0,r.kt)("p",null,"The execution of ",(0,r.kt)("inlineCode",{parentName:"p"},"sedge down")," will close and remove all the opened containers and networks used by sedge."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ sedge down\n2022-00-00 00:00:00 -- [INFO] [Logger Init] Log level: info\n2022-00-00 00:00:00 -- [INFO] You are running the latest version of sedge. Version:  v0.5.1\n[sudo] password for maceo:\n[+] Running 7/7\n \u283f Container execution-client                            Removed                                                                 93.8s\n \u283f Container validator-client                            Removed                                                                  0.0s\n \u283f Container consensus-client                            Removed                                                                  3.8s\n \u283f Container validator-import-client                     Removed                                                                  0.0s\n \u283f Network docker-compose-scripts_default                Removed                                                                  0.2s\n \u283f Network sedge_network                                 Removed                                                                  0.1s\n")))}p.isMDXComponent=!0}}]);