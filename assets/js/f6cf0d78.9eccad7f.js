"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1251],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>u});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),c=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=c(t),u=o,m=g["".concat(i,".").concat(u)]||g[u]||d[u]||s;return t?r.createElement(m,a(a({ref:n},p),{},{components:t})):r.createElement(m,a({ref:n},p))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=g;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<s;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},6304:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=t(7462),o=(t(7294),t(3905));const s={sidebar_position:8,id:"logs"},a="Logs",l={unversionedId:"commands/logs",id:"commands/logs",title:"Logs",description:"Running sedge logs will get running container logs using docker compose CLI.",source:"@site/docs/commands/logs.mdx",sourceDirName:"commands",slug:"/commands/logs",permalink:"/docs/commands/logs",draft:!1,editUrl:"https://github.com/NethermindEth/sedge/tree/main/docs/docs/commands/logs.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,id:"logs"},sidebar:"tutorialSidebar",previous:{title:"Keys",permalink:"/docs/commands/keys"},next:{title:"Networks",permalink:"/docs/commands/networks"}},i={},c=[{value:"Help",id:"help",level:2}],p={toc:c};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"logs"},"Logs"),(0,o.kt)("p",null,"Running ",(0,o.kt)("inlineCode",{parentName:"p"},"sedge logs")," will get running container logs using docker compose CLI."),(0,o.kt)("h2",{id:"help"},"Help"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'$ sedge logs -h\nGet running container logs using docker-compose CLI. If no services are provided, the logs of all running services will be displayed.\n\n    By default will run \'docker compose -f <script> logs --follow <service>\'\n\nUsage:\n  sedge logs [flags] [services]\n\nFlags:\n  -h, --help          help for logs\n  -p, --path string   generation path for sedge data (default "/path/to/sedge-data")\n  -t, --tail int      Tail the number of desired logs. If not set, or set to 0, logs are followed.\n\nGlobal Flags:\n      --log-level string   Set Log Level, e.g panic, fatal, error, warn, warning, info, debug, trace (default "info")\n')))}d.isMDXComponent=!0}}]);