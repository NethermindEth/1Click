// Code generated by MockGen. DO NOT EDIT.
// Source: ./cli/cli_utils.go

// Package mock_cli is a generated GoMock package.
package cli

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockContainerIPFetcherI is a mock of ContainerIPFetcherI interface.
type MockContainerIPFetcherI struct {
	ctrl     *gomock.Controller
	recorder *MockContainerIPFetcherIMockRecorder
}

// MockContainerIPFetcherIMockRecorder is the mock recorder for MockContainerIPFetcherI.
type MockContainerIPFetcherIMockRecorder struct {
	mock *MockContainerIPFetcherI
}

// NewMockContainerIPFetcherI creates a new mock instance.
func NewMockContainerIPFetcherI(ctrl *gomock.Controller) *MockContainerIPFetcherI {
	mock := &MockContainerIPFetcherI{ctrl: ctrl}
	mock.recorder = &MockContainerIPFetcherIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContainerIPFetcherI) EXPECT() *MockContainerIPFetcherIMockRecorder {
	return m.recorder
}

// FetchIP mocks base method.
func (m *MockContainerIPFetcherI) FetchIP(service, generationPath string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchIP", service, generationPath)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchIP indicates an expected call of FetchIP.
func (mr *MockContainerIPFetcherIMockRecorder) FetchIP(service, flags interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchIP", reflect.TypeOf((*MockContainerIPFetcherI)(nil).FetchIP), service, flags)
}
